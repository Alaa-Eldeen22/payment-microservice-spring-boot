spring.application.name=Payment Service

# Database Configuration
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=${DB_DRIVER}

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=${JPA_HBM2DDL:update}
spring.jpa.show-sql=${JPA_SHOW_SQL:true}
spring.jpa.database-platform=${JPA_DIALECT:org.hibernate.dialect.PostgreSQLDialect}
spring.jpa.properties.hibernate.format_sql=${JPA_FORMAT_SQL:true}
spring.jpa.properties.hibernate.use_sql_comments=${JPA_SQL_COMMENTS:true}

# Active Profile
spring.profiles.active=${SPRING_PROFILE:dev}

# RabbitMQ Connection
spring.rabbitmq.host=${RABBITMQ_HOST}
spring.rabbitmq.port=${RABBITMQ_PORT}
spring.rabbitmq.username=${RABBITMQ_USERNAME}
spring.rabbitmq.password=${RABBITMQ_PASSWORD}
spring.rabbitmq.addresses=${RABBITMQ_URL}

# RabbitMQ Configuration
spring.rabbitmq.listener.simple.acknowledge-mode=auto
spring.jackson.serialization.write-dates-as-timestamps=false

# RabbitMQ Queues
invoice.queue=${INVOICE_QUEUE}
payment.queue=${PAYMENT_QUEUE}

# RabbitMQ Exchange
invoice.exchange=${INVOICE_EXCHANGE}

# Invoice Event Routing Keys
invoice.routing.created=${INVOICE_CREATED_ROUTING_KEY}
invoice.routing.retry=${INVOICE_RETRIED_ROUTING_KEY}

# Payment Event Routing Keys
payment.routing.authorized=${PAYMENT_AUTHORIZED_ROUTING_KEY}
payment.routing.failed=${PAYMENT_FAILED_ROUTING_KEY}
payment.routing.captured=${PAYMENT_CAPTURED_ROUTING_KEY}
payment.routing.voided=${PAYMENT_VOIDED_ROUTING_KEY}
